@model OnlineExamManagement.Models.Question

@{
    ViewBag.Title = "CreateQuestion";
}


<div class="t_createquestion container-fluid">
    <h1>Edit Question</h1>
    <div class="t_createqueform container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group container">
                <div class="form-group row">
                    @Html.LabelFor(model => model.Ques, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.Ques, new { htmlAttributes = new { @class = "form-control", @id = "inputque", @placeholder = "Question" } })
                        @Html.ValidationMessageFor(model => model.Ques, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.CourseRefId, "CourseRefId", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.DropDownList("CourseRefId", new List<SelectListItem>
                                                               {
                                                                    new SelectListItem{ Text="ASP .Net MVC", Value = "1" },
                                                                    new SelectListItem{ Text="Angular", Value = "2" },
                                                                    new SelectListItem{ Text="SQL", Value = "3" },

                                                               })
                        @Html.ValidationMessageFor(model => model.CourseRefId, "Course Name Required", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control", @id = "optionA", @placeholder = "OptionA" } })
                        @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control", @id = "optionB", @placeholder = "OptionB" } })
                        @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control", @id = "optionC", @placeholder = "OptionC" } })
                        @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control", @id = "optionD", @placeholder = "OptionD" } })
                        @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Correct, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="form-group col-md-5">
                        @Html.DropDownList("Correct", new List<SelectListItem>
                                                                {
                                                                     new SelectListItem{ Text="Option A", Value = "optionA" },
                                                                     new SelectListItem{ Text="Option B", Value = "optionB" },
                                                                     new SelectListItem{ Text="Option C", Value = "optionC" },
                                                                     new SelectListItem{ Text="Option D", Value = "optionD" },
                                                                }, new { @class = "form-control form-group" })
                        @Html.ValidationMessageFor(model => model.Correct, "Correct Action is Required", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-md-2">
                    <button type="submit" class="t_submit btn ">Edit</button>
                </div>

                <div class="form-group col-md-2">
                    <button type="reset" class=" reset btn ">Reset</button>
                </div>

                <div class="form-group col-md-2">
                    <button type="button" class="backtolist btn ">@Html.ActionLink("Back to List", "ViewQuestion")</button>
                </div>
            </div>
        }
    </div>
</div>



















